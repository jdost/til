#!/bin/sh

set -euo pipefail

show_help() {
    cat <<-HELP
til todo - til todo list handler

USAGE: til todo <add|finish|show> [-l sublist] [item]

Manages a TODO list (or lists) via the commands:
  add - adds either a new list or a new item
    -l|--list - specifies a sub list to add to

    NOTE: if no item is set and a list is set, a new list with that name is created

  edit - opens TODO list in an editor (for bulk actions)

  finish - marks a specified item (or list) as complete
    -l|--list - specifies a sub list to act on

    NOTE: if no item is set, the whole list specified will be marked complete

  show - lists all (or only a list's) items
    -l|--list     - specifies a sub list to show
    -c|--complete - will show completed items
HELP
}

TODOFILE=$DOCS_ROOT/todo
DEFAULT_LIST='general'
NUM_REGEX='^[0-9]+$'

show_lists() {
   cat $TODOFILE | grep -v '^$' | grep -v '^\[[ |x]\]'
}

list::clean() {
   sed -i '/^$/d' $TODOFILE
}

list::complete() {
    ITEM=$ARGS
    if [[ $ITEM =~ $NUM_REGEX ]]; then
        ITEM+="p"
        ITEM=$(list::show ${LIST:-} | grep ":" | sed -n "$ITEM" | cut -d':' -f2 | cut -d' ' -f4-)
    fi

    LINE_NUM=$(grep -n -m1 -F "$ITEM" $TODOFILE | cut -d':' -f1)
    LINE_NUM+="s"

    echo "Marking: [$(echo $ITEM)] as complete"
    sed -i -e "$LINE_NUM/\[ \]/\[x\]/" $TODOFILE
}

list::add() {
    local list=$1
    local item=$2

    touch /tmp/todo
    awk -v list=$list -v item="$item" '
BEGIN { in_list = 0; }
/^[^\[]/ {
   if ($1 == list) { in_list = 1 }
   else if (in_list == 1) {
      printf("[ ] %s\n", item);
      in_list = 0;
   }
}
{ print }
END { if (in_list == 1) {
      printf("[ ] %s\n", item);
   } }
' $TODOFILE > /tmp/todo
    echo "Adding [$item] to list $list"
    mv /tmp/todo $TODOFILE
}

list::show() {
    local list=${1:-}
    local list_items=$(cat $TODOFILE | grep -v '^$')

    if [[ -z "${SHOW_COMPLETE:-}" ]]; then
        list_items=$(echo "$list_items" | grep -v "^\[x\]")
    fi

    echo "$list_items" | awk -v list=$list '
BEGIN {
   ln = 0;
}
/^[^\[]/ {

   if (length(list) == 0) {
      flag=1
      list_name=$1
   }
   else if ($1 == list)  { flag=1 }
   else                  { flag=0 };
   next
}
flag {
   if (length(list_name) > 0) {
      printf("   %s\n", list_name);
      list_name=""
   }
   ln++; printf("%2d: %s\n", ln, $0)
}
'
}

ARGS=""
while (( $# )); do
    case "${1:-}" in
        "-h"|"--help")
            show_help
            exit 1
            ;;
        "-l"|"--list")
            shift
            LIST=${1:-}
            ;;
        "-c"|"--complete")
            SHOW_COMPLETE=1
            ;;
        "a"|"add")
            ACTION="add"
            ;;
        "s"|"show")
            ACTION="show"
            ;;
        "f"|"finish")
            ACTION="finish"
            ;;
        "e"|"edit")
            ACTION="edit"
            ;;
        *)
            if [[ -z "$ARGS" ]]; then
                ARGS="$1"
            else
                ARGS="$ARGS $1"
            fi
            ;;
    esac
    shift
done

[[ ! -e "$TODOFILE" ]] && touch "$TODOFILE"

case $ACTION in
    add)
        LIST=${LIST:-$DEFAULT_LIST}
        if ! grep -e "^$LIST$" $TODOFILE > /dev/null; then
            echo "Creating list [$LIST]"
            echo -e "$LIST\n" >> $TODOFILE
            list::clean
        fi

        list::add "$LIST" "$ARGS"
        list::clean
        ;;
    finish)
        list::complete
        ;;
    show)
        list::show "${LIST:-}"
        ;;
    edit)
        _edit "$TODOFILE"
        ;;
    *)
        show_help
        exit 1
        ;;
esac

_add $TODOFILE

if [[ -s $XDG_CONFIG_HOME/til ]]; then source $XDG_CONFIG_HOME/til
elif [[ -s $HOME/.tilrc ]]; then source $HOME/.tilrc
elif [[ -s /etc/tilrc ]]; then source /etc/tilrc
fi

TIL_ROOT="$(dirname $(realpath $0))/.."
TILHOME=${TILHOME:-$TIL_ROOTDIR}
DOC_SUFFIX=${DOC_SUFFIX:-md}
if [[ $TILHOME == $TIL_ROOTDIR ]]; then
   DOCS_ROOT=$TILHOME/docs
else
   DOCS_ROOT=$TILHOME
fi

[[ ! -d $DOCS_ROOT ]] && mkdir -p $DOCS_ROOT

VERBOSE=${VERBOSE:-0}

log() {
   if [[ $VERBOSE == "1" ]]; then
      echo $1
   fi
}

init_file() {
   local FILENAME=$1
   local PARTCOUNT=$(echo $FILENAME | tr '/' ' ' | wc -w)
   local DIRNAME=$(echo $FILENAME | cut -d'/' -f-$PARTCOUNT)

   if [[ ! -d $DIRNAME ]]; then
      log "Creating $DIRNAME\..."
      mkdir -p $DIRNAME
   fi

   if [[ ! -f $FILENAME ]]; then
      log "Initializing $FILENAME\..."
      touch $FILENAME
   fi
}

show_help() {
   case $1 in
      -h|--help)
         echo -e "$2"
         exit 0;;
   esac
}

_edit() {
   local FILENAME=$1
   local VIM_SUPPLEMENT=$TIL_ROOT/etc/vimrc
   [[ -f $FILENAME ]] && local PRE_HASH=$(sha256sum -t $FILENAME)
   vim -S $VIM_SUPPLEMENT + $FILENAME
   [[ -d $FILENAME ]] && return 1

   [[ $(sha256sum $FILENAME) != $PRE_HASH ]] && return 0
   return 1
}

ls_clean() {
   local DIRNAME=$1
   find $DIRNAME -name "*.$DOC_SUFFIX" |
      sed "s/$(echo $DIRNAME/ | sed 's/\//\\\//g')//g" |
      sed "s/\.$DOC_SUFFIX//g"
}

is_empty() {
   [[ ! -s $1 ]] && return 0
   return 1
}

# vim: ft=sh
